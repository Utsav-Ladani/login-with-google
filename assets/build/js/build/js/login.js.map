{"version":3,"file":"js//build/js/login.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAMA,aAAa,GAAG;EAErB;AACD;AACA;AACA;AACA;EACCC,IAPqB,kBAOd;IACNC,QAAQ,CAACC,gBAATD,CAA2B,kBAA3BA,EAA+C,KAAKE,eAApDF;EARoB;;EAWrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCE,eApBqB,6BAoBH;IAEjB;IACA,KAAKC,IAAL,GAAYH,QAAQ,CAACI,cAATJ,CAAyB,WAAzBA,KAA0CA,QAAQ,CAACI,cAATJ,CAAyB,cAAzBA,CAAtD,CAHiB,CAKjB;IACA;;IACA,IAAKA,QAAQ,CAACK,aAATL,CAAwB,kBAAxBA,KAAgD,SAAS,KAAKG,IAAnE,EAA0E;MACzEH,QAAQ,CAACM,MAATN,GAAkB,iCAAiCO,MAAM,CAACC,QAAPD,CAAgBE,QAAjD,GAA4D,GAA9ET;IACA;;IAED,IAAK,SAAS,KAAKG,IAAnB,EAA0B;MACzB;IACA;;IAED,KAAKO,iBAAL,GAAyB,KAAKP,IAAL,CAAUE,aAAV,CAAyB,kBAAzB,CAAzB;IACA,KAAKK,iBAAL,CAAuBC,SAAvB,CAAiCC,MAAjC,CAAyC,QAAzC,EAhBiB,CAiBjB;;IACA,KAAKT,IAAL,CAAUU,MAAV,CAAkB,KAAKH,iBAAvB;EACA;AAvCoB,CAAtB;AA2CAZ,aAAa,CAACC,IAAdD;;;;;;;;;;;;;;;;;UEjDA;UACA;UACA;UACA;UACA;UACA","sources":["webpack:///./src/js/login.js","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["/**\n * JS for Login and Register page.\n *\n * @package login-with-google\n */\n\nconst wpGoogleLogin = {\n\n\t/**\n\t * Init method.\n\t *\n\t * @return void\n\t */\n\tinit() {\n\t\tdocument.addEventListener( 'DOMContentLoaded', this.onContentLoaded );\n\t},\n\n\t/**\n\t * Callback function when content is load.\n\t * To render the google login button at after login form.\n\t *\n\t * Set cookie if \"Login with Google\" button displayed to bypass page cache\n\t * Do not set on wp login or registration page.\n\t *\n\t * @return void\n\t */\n\tonContentLoaded() {\n\n\t\t// Form either can be login or register form.\n\t\tthis.form = document.getElementById( 'loginform' ) || document.getElementById( 'registerform' );\n\n\t\t// Set cookie if \"Login with Google\" button displayed to bypass page cache\n\t\t// Do not set on wp login or registration page.\n\t\tif ( document.querySelector( '.wp_google_login' ) && null === this.form ) {\n\t\t\tdocument.cookie = 'wp-login-with-google=1;path=' + window.location.pathname + ';';\n\t\t}\n\n\t\tif ( null === this.form ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.googleLoginButton = this.form.querySelector( '.wp_google_login' );\n\t\tthis.googleLoginButton.classList.remove( 'hidden' );\n\t\t// HTML is cloned from existing HTML node.\n\t\tthis.form.append( this.googleLoginButton );\n\t}\n\n};\n\nwpGoogleLogin.init();\n","","// startup\n// Load entry module and return exports\n__webpack_modules__[\"./src/js/login.js\"]();\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/scss/login.scss\"]();\n",""],"names":["wpGoogleLogin","init","document","addEventListener","onContentLoaded","form","getElementById","querySelector","cookie","window","location","pathname","googleLoginButton","classList","remove","append"],"sourceRoot":""}